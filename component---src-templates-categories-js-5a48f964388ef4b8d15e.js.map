{"version":3,"sources":["webpack:///component---src-templates-categories-js-5a48f964388ef4b8d15e.js","webpack:///./src/templates/categories.js"],"names":["webpackJsonp","226","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","pageQuery","undefined","_react","_react2","_propTypes","_propTypes2","_gatsbyLink","_gatsbyLink2","Categories","_ref","pathContext","data","posts","tag","allMarkdownRemark","edges","createElement","filter","post","node","frontmatter","title","length","map","_ref2","className","key","id","to","path","date","excerpt","propTypes","shape","string","isRequired","totalCount","number","arrayOf"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAiBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAfvFH,EAAQI,YAAa,EACrBJ,EAAQM,UAAYC,MCRrB,IAAAC,GAAAP,EAAA,GDYKQ,EAAUP,EAAuBM,GCXtCE,EAAAT,EAAA,GDeKU,EAAcT,EAAuBQ,GCb1CE,EAAAX,EAAA,IDiBKY,EAAeX,EAAuBU,GCfrCE,EAAa,SAAAC,GAA2B,GAAxBC,GAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KAElBC,GADCF,EAARG,IACiBF,EAAKG,kBAAtBC,MACV,OACEZ,GAAAJ,QAAAiB,cAAA,WACEb,EAAAJ,QAAAiB,cAAA,UACGJ,EACEK,OAAO,SAAAC,GAAA,MAAQA,GAAKC,KAAKC,YAAYC,MAAMC,OAAS,IACpDC,IAAI,SAAAC,GAAoB,GAAXN,GAAWM,EAAjBL,IAER,OACEhB,GAAAJ,QAAAiB,cAAA,OAAKS,UAAU,oBAAoBC,IAAKR,EAAKS,IAC3CxB,EAAAJ,QAAAiB,cAAA,UACEb,EAAAJ,QAAAiB,cAAAT,EAAAR,SAAM6B,GAAIV,EAAKE,YAAYS,MAAOX,EAAKE,YAAYC,QAErDlB,EAAAJ,QAAAiB,cAAA,UAAKE,EAAKE,YAAYU,MACtB3B,EAAAJ,QAAAiB,cAAA,SAAIE,EAAKa,cAcrBvB,GAAWwB,WACXtB,YAAaL,EAAAN,QAAUkC,OACrBpB,IAAKR,EAAAN,QAAUmC,OAAOC,aAExBxB,KAAMN,EAAAN,QAAUkC,OACdnB,kBAAmBT,EAAAN,QAAUkC,OAC3BG,WAAY/B,EAAAN,QAAUsC,OAAOF,WAC7BpB,MAAOV,EAAAN,QAAUuC,QACfjC,EAAAN,QAAUkC,OACRd,KAAMd,EAAAN,QAAUkC,OACdb,YAAaf,EAAAN,QAAUkC,OACrBJ,KAAMxB,EAAAN,QAAUmC,OAAOC,WACvBd,MAAOhB,EAAAN,QAAUmC,OAAOC,iBAG3BA,iBDuCRzC,EAAQK,QCjCMS,CAsBFR","file":"component---src-templates-categories-js-5a48f964388ef4b8d15e.js","sourcesContent":["webpackJsonp([26379419371658],{\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(6);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(25);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Categories = function Categories(_ref) {\n\t  var pathContext = _ref.pathContext,\n\t      data = _ref.data;\n\t  var tag = pathContext.tag;\n\t  var posts = data.allMarkdownRemark.edges;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'ul',\n\t      null,\n\t      posts.filter(function (post) {\n\t        return post.node.frontmatter.title.length > 0;\n\t      }).map(function (_ref2) {\n\t        var post = _ref2.node;\n\t\n\t        //const { path, title } = node.frontmatter;\n\t        return _react2.default.createElement(\n\t          'div',\n\t          { className: 'blog-post-preview', key: post.id },\n\t          _react2.default.createElement(\n\t            'h1',\n\t            null,\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              { to: post.frontmatter.path },\n\t              post.frontmatter.title\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            'h2',\n\t            null,\n\t            post.frontmatter.date\n\t          ),\n\t          _react2.default.createElement(\n\t            'p',\n\t            null,\n\t            post.excerpt\n\t          )\n\t        );\n\t      })\n\t    )\n\t  ); //<Link to=\"/\">All Categories</Link>-->\n\t};\n\t\n\tCategories.propTypes = {\n\t  pathContext: _propTypes2.default.shape({\n\t    tag: _propTypes2.default.string.isRequired\n\t  }),\n\t  data: _propTypes2.default.shape({\n\t    allMarkdownRemark: _propTypes2.default.shape({\n\t      totalCount: _propTypes2.default.number.isRequired,\n\t      edges: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t        node: _propTypes2.default.shape({\n\t          frontmatter: _propTypes2.default.shape({\n\t            path: _propTypes2.default.string.isRequired,\n\t            title: _propTypes2.default.string.isRequired\n\t          })\n\t        })\n\t      }).isRequired)\n\t    })\n\t  })\n\t};\n\t\n\texports.default = Categories;\n\t\n\t// export const pageQuery = graphql`\n\t// query CategoryPage($tag: String) {\n\t//   allMarkdownRemark(\n\t//     limit: 2000\n\t//     sort: { fields: [frontmatter___date], order: DESC }\n\t//     filter: { frontmatter: { tags: { in: [$tag] } } }\n\t//   ) {\n\t//     totalCount\n\t//     edges {\n\t//       node {\n\t//         frontmatter {\n\t//           title\n\t//           path\n\t//         }\n\t//       }\n\t//     }\n\t//   }\n\t// }\n\t// `;\n\t\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-categories-js-5a48f964388ef4b8d15e.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Link from 'gatsby-link';\n\nconst Categories = ({ pathContext, data }) => {\n  const { tag } = pathContext;\n  const { edges: posts } = data.allMarkdownRemark;\nreturn (\n  <div>\n    <ul>\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n        //const { path, title } = node.frontmatter;\n        return (\n          <div className=\"blog-post-preview\" key={post.id}>\n            <h1>\n              <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n            </h1>\n            <h2>{post.frontmatter.date}</h2>\n            <p>{post.excerpt}</p>\n          </div>\n        );\n      })}\n    </ul>\n    {/*\n            This links to a page that does not yet exist.\n            We'll come back to it!\n          */}\n\n  </div>\n);//<Link to=\"/\">All Categories</Link>-->\n};\n\nCategories.propTypes = {\npathContext: PropTypes.shape({\n  tag: PropTypes.string.isRequired,\n}),\ndata: PropTypes.shape({\n  allMarkdownRemark: PropTypes.shape({\n    totalCount: PropTypes.number.isRequired,\n    edges: PropTypes.arrayOf(\n      PropTypes.shape({\n        node: PropTypes.shape({\n          frontmatter: PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n          }),\n        }),\n      }).isRequired\n    ),\n  }),\n}),\n};\n\nexport default Categories;\n\n// export const pageQuery = graphql`\n// query CategoryPage($tag: String) {\n//   allMarkdownRemark(\n//     limit: 2000\n//     sort: { fields: [frontmatter___date], order: DESC }\n//     filter: { frontmatter: { tags: { in: [$tag] } } }\n//   ) {\n//     totalCount\n//     edges {\n//       node {\n//         frontmatter {\n//           title\n//           path\n//         }\n//       }\n//     }\n//   }\n// }\n// `;\n\nexport const pageQuery = graphql`\n  query CategoryPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { order: DESC, fields: [frontmatter___date]}\n      filter: { frontmatter: { tags: { in : [$tag] } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/categories.js"],"sourceRoot":""}